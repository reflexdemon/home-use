io:
    vpv:
        honeywell:
            api:
                locationsEndpoint: https://api.honeywell.com/v2/locations
                thermostatsEndpoint: https://api.honeywell.com/v2/devices/thermostats
            credentials:
                clientId: '{cipher}bc1d6bc414beb11efd546232391ddcf63343f180502390642da077275fcc991a7ae65a926a30cf4a6cb701234960ac3916db45126c476eb941cd2910abe26cf7'
                clientSecret: '{cipher}0a9c1d15810b86e208332ad5b84d9ff54ab086394428c4f158dbc7eb7600b219304dae71d2afc05868a32ce7044840f8'
            oauth:
                accessTokenEndpoint: https://api.honeywell.com/oauth2/accesstoken
                authorizeEndpoint: https://api.honeywell.com/oauth2/authorize
                tokenEndpoint: https://api.honeywell.com/oauth2/token
server:
    port: 8080
spring:
    data:
        mongodb:
            uri: ${MONGO_URI}
    jpa:
        properties:
            hibernate:
                show_sql: true
    security:
        #    https://docs.spring.io/spring-security/site/docs/5.2.x/reference/html/oauth2.html#oauth2login-boot-property-mappings
        oauth2:
            client:
                registration:
                    google:
                        client-id: '{cipher}b7d44648dfec54846be133acad7e51168e2573ad04ca7da4895ddda028f25bbf4691a3af151535da3e1b7e6b07ef39b12d79acbce71512e2882327326aabad836db80af9cdd23c4ea5dcdd4a8310ef9ca7d9982221b8d49c7461e74a97696e31'
                        client-secret: '{cipher}ded65b42555deca45828095e135e11b72e963c4c1bc552c424ae3523a8e797dd80db6f6eef100a1727e05d7bd18a3e02'
